continue
ActiveRecord::RecordNotFound Exception: Couldn't find all Categories with 'id': (, 5, 6, 7, 8) (found 4 results, but was looking for 5)
continue
@category = Category.find_by(params[:product][:categories])
@category = Category.find(params[:product][:categories])
@category = Category.find(params[:product][:categories]).where('`categories`.`id` is not null')
@category = Category.find(params[:product][:categories])
@category = Category.find_each(params[:product][:categories])
@category = Category.find_all(params[:product][:categories])
@category = Category.find(params[:product][:categories])
@category = Category.find_by(params[:product][:categories])
@category = Category.find_all_by(params[:product][:categories])
continue
 @category = Category.find_all_by(params[:product][:categories])
 @category = Category.find_by(params[:product][:categories])
continue
category = Category.find(params[:product][:categories])
continue
c
c = Category.create
p.categories
p
p.save
p.id= 1000
p = Product.first
p.errors
p.id
p
p.save
p = Product.new
produc_id_t = params[:id]
continue
produc_id_t = params[:product][:id]
 categories_id_t = params[:product][:categories]
continue
produc_id_t = params[:product]
categories_id_t = params[:product][:categories]
continue
coninue
var_ss.select('`products`.`id`')
var_ss = Product.joins(:categories)
continue
var_ss.select('`categories_products`.`category_id`')
var_ss = Product.joins(:categories)
continue
var_ss.select('`categories_products`.`category_id`')
 var_ss = Product.includes(:categories)
continue
var_ss = Product.joins(:categories).select('`categories_products`.`category_id`')
continue
Product.joins(:categories).select('`categories_products`.`category_id`,`categories_products`.`product_id`')
continue
var_ss = Product.joins(:categories).select('categories_products.category_id,categories_products.product_id')
continue
 var_ss = Product.joins(:categories)
continue
var_ss.select('categogies_products.category_id')
var_ss = Product.joins(:categories)
continue
Product.joins(:categories)
var = Product.joins(:categories)
continue
var_search = Product.search_product_category()
continue
var_search = Product.search_product_category(params[:id])
continue
var_search = Product.search_product_category
continue
p @getid
continue
countinue
@getid = params[:product][:categories]
continue
p @getid
continue
p @getid
continue
p @getid
continue
Product.joins(:categories).where("category_id = ? and products.id <> ?", var_cate.ids,id_product )continue
Product.joins(:categories).where("category_id = ? and products.id <> ?", var_cate.ids,id_product )
var_cate = var_p.first.categories
var_p = Product.includes(:categories).where("products.id = ?", "#{id_product}")
continue
Product.joins(:categories).where("category_id = ? and products.id <> ?", var_cate.ids,id_product )
var_cate = var_p.first.categories
var_p = Product.includes(:categories).where("products.id = ?", "#{id_product}")
continue
Product.joins(:categories).where("categories.id = ?", "#{var_categories}")
continue
Product.joins(:categories).where("categories.id = ?", "#{var_categories}")
continue
Product.joins(:categories).where("categories.name like ?", "%#{var_categories}%")
continue
Product.joins(:categories).where("category_id = ?", var_cate.ids)
var_cate = var_p.first.categories
var_p = Product.includes(:categories).where("products.id = ?", "#{id_product}")
continue
Product.joins(:categories).where("category_id = ?", "#{var_cate.ids}")
var_cate = var_p.first.categories
var_p = Product.includes(:categories).where("products.id = ?", "#{id_product}")
continue
@products
continue
Product.joins(:categories).where("categories_ids = ?", "#{var_cate.ids}")
Product.joins(:categories).where("categories_ids = ?", "#{var_cate.id}")
Product.joins(:categories).where("categories_id = ?", "#{var_cate.id}")
var_cate = var_p.first.categories
var_p = Product.includes(:categories).where("products.id = ?", "#{id_product}")
continue
var_cate = var_p.first.categories
var_cate = var_p.categories
var_cate = var_p.first.categories
var_p = Product.includes(:categories).where("products.id = ?", "#{id_product}")
continue
Product.includes(:categories).where("products.id = ?", "%#{id_product}%")
continue
@product.categories
continue
Category.all
Category.all.size
Category.size
Category
@categories
